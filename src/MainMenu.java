/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mey
 */
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.Panel;
import java.awt.Rectangle;
import java.awt.Toolkit;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import java.awt.ScrollPane;
import java.awt.Dimension;
import java.awt.Point;
import javax.swing.border.EmptyBorder;

public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    private RBTSimulator simulator = new RBTSimulator();

    /**
     * Creates new form MainMenu1
     */
    Functions funcs = new Functions();

    public MainMenu() {
        initComponents();
        simulator.RBTree = funcs.readCsv();
        this.setLocationRelativeTo(null);
        this.inicializar(true);
        complementos();
        this.pack();
    }

    /**
     * Permite activar y desactivar el interfaz del programa para poder
     * interactuar o no con él
     *
     * @param enable Booleano que activara el interfaz siendo true y la
     * desactivara siendo false
     */
    private void inicializar(boolean enable) {
        this.setEnabled(enable);
        this.DeleteNodeBtn.setEnabled(enable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        DeleteNodeBtn = new javax.swing.JButton();
        AddNodeBtn = new javax.swing.JButton();
        Close = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DeleteNodeBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        DeleteNodeBtn.setText("Eliminar");
        DeleteNodeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteNodeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteNodeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 540, 120, -1));

        AddNodeBtn.setBackground(new java.awt.Color(255, 255, 255));
        AddNodeBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddNodeBtn.setText("Insertar");
        AddNodeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNodeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(AddNodeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 540, 116, -1));

        Close.setBackground(new java.awt.Color(255, 0, 0));
        Close.setText("X");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });
        jPanel1.add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 0, 50, -1));

        SearchBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        SearchBtn.setText("Buscar");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });
        jPanel1.add(SearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 540, 90, -1));
        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 530));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteNodeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteNodeBtnActionPerformed
        try {
            int id = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el numero de cédula de la persona que desea eliminar: "));
            this.simulator.delete(id);
            complementos();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_DeleteNodeBtnActionPerformed

    private void AddNodeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNodeBtnActionPerformed
        String name = JOptionPane.showInputDialog("Ingresa el nombre:");
        while (name.equals("")) {
            name = JOptionPane.showInputDialog("Ingresa un nombre valido:");
        }
        String surname = JOptionPane.showInputDialog("Ingresa el apellido:");
        while (surname.equals("")) {
            surname = JOptionPane.showInputDialog("Ingresa un apellido valido:");
        }
        try {
            int data = Integer.parseInt(JOptionPane.showInputDialog("Ingresa la cédula:"));
            simulator.insert(name, surname, data);
            complementos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un valor valido");
        }
    }//GEN-LAST:event_AddNodeBtnActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Desea guardar la informacion?");
        if (confirm == 0) {
            funcs.writeCsv(simulator.RBTree);
            System.exit(WIDTH);
        } else if (confirm == 1) {
            System.exit(WIDTH);
        } else {
        }

    }//GEN-LAST:event_CloseActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        try {
            int search = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el numero de cedula correspondiente a la persona que desea encontrar"));
            String info = this.simulator.getInfo(search);
            if (info.equals("null")) {
                JOptionPane.showMessageDialog(null, "Cedula no encontrada");
            } else {
                JOptionPane.showMessageDialog(null, info);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cedula no encontrada");
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public void complementos() {
        this.repaintTree();
    }

    /**
     * Edita el jScrollPane2 y jScrollPane2, los cuales van sobreescribiendo el
     * dibujo del arbol a medida de que se agregan o eliminan nodos
     */
    private void repaintTree() {
        JPanel visualization = new JPanel(); // Se crea el panel donde irá el árbol
        visualization.setBorder(new EmptyBorder(5, 5, 5, 5));
        visualization.setLayout(new BorderLayout(0, 0));
        visualization.setPreferredSize(new Dimension(10000, 500)); // Se colocan las dimensiones del panel
        visualization.add(this.simulator.getDrawing()); // Se añade dicho objeto al panel
        this.jScrollPane1.setViewportView(visualization); // Se agrega el panel al ScrollPane
        Dimension size = this.jScrollPane1.getViewport().getViewSize(); //Obtiene el tamaño del ScrollPane
        int x = (size.width - this.jScrollPane1.getBounds().width) / 2; // Obtiene la coordenada en el eje x de la mitad del ScrollPan
        int y = (size.height - this.jScrollPane1.getBounds().height) / 2; // Obtiene la coordenada en el eje y de la mitad del ScrollPan
        this.jScrollPane1.getViewport().setViewPosition(new Point(x, y)); //Posiciona al scroll en el centro del ScrollPane
        this.simulator = simulator;
        this.jScrollPane1.setVisible(true);
        visualization.setVisible(true);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNodeBtn;
    private javax.swing.JButton Close;
    private javax.swing.JButton DeleteNodeBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
